{"version":3,"file":"rollup.js","sourceRoot":"","sources":["../../../src/lib/steps/rollup.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,mCAAoC;AACpC,0DAA0D;AAC1D,mDAAmD;AACnD,6BAA6B;AAC7B,mCAAmC;AACnC,2DAAwD;AACxD,MAAM,cAAc,GAAI,QAAgB,CAAC,OAAO,CAAC;AAYjD;;;;GAIG;AACH,gBAA6B,IAAmB;;QAC9C,GAAG,CAAC,KAAK,CAAC,YAAY,cAAc,KAAK,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAExF,MAAM,OAAO,qBAER,+BAAc,EAEd,IAAI,CAAC,SAAS,CAClB,CAAC;QACF,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEzC,oBAAoB;QACpB,MAAM,MAAM,GAAoB,MAAM,QAAQ,CAAC,MAAM,CAAC;YACpD,OAAO,EAAE,MAAM;YACf,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACrB,MAAM,kBAAkB,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC;gBAC7E,EAAE,CAAC,CAAC,kBAAkB,KAAK,IAAI,CAAC,CAAC,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,0BAA0B;gBAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAEzC,2EAA2E;oBAC3E,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC/C,MAAM,CAAC,KAAK,CAAC;oBACf,CAAC;gBACH,CAAC;gBAED,mDAAmD;gBACnD,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YACD,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE;gBACP,WAAW,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gBAC3C,QAAQ,EAAE;aACX;YACD,MAAM,EAAE,CAAC,OAAO,EAAE,EAAE;gBAClB,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,mBAAmB,CAAC,CAAC,CAAC;oBACzC,MAAM,CAAC;gBACT,CAAC;gBAED,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC;SACF,CAAC,CAAC;QAEH,4BAA4B;QAC5B,MAAM,MAAM,CAAC,KAAK,CAAC;YACjB,4FAA4F;YAC5F,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE;YAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;IACL,CAAC;CAAA;AA3DD,wBA2DC","sourcesContent":["import * as  __rollup from 'rollup';\nimport * as nodeResolve from 'rollup-plugin-node-resolve';\nimport * as commonJs from 'rollup-plugin-commonjs';\nimport * as path from 'path';\nimport * as log from '../util/log';\nimport { ROLLUP_GLOBALS } from '../conf/rollup.globals';\nconst ROLLUP_VERSION = (__rollup as any).VERSION;\n\nexport type BundleFormat = __rollup.Format;\n\nexport interface RollupOptions {\n  moduleName: string,\n  entry: string,\n  format: BundleFormat,\n  dest: string,\n  externals: {[key: string]: string},\n}\n\n/**\n * Runs rollup over the given entry file, bundling it up.\n *\n * @param opts\n */\nexport async function rollup(opts: RollupOptions): Promise<void> {\n  log.debug(`rollup (v${ROLLUP_VERSION}) ${opts.entry} to ${opts.dest} (${opts.format})`);\n\n  const globals = {\n    // default externals for '@angular/*' and 'rxjs'\n    ...ROLLUP_GLOBALS,\n    // external symbols passed from the user's ng-package.json\n    ...opts.externals,\n  };\n  const globalsKeys = Object.keys(globals);\n\n  // Create the bundle\n  const bundle: __rollup.Bundle = await __rollup.rollup({\n    context: 'this',\n    external: (moduleId) => {\n      const isExplicitExternal = globalsKeys.some((global) => global === moduleId);\n      if (isExplicitExternal === true) {\n        return true;\n      }\n\n      // Determine from the path\n      if (moduleId.startsWith('/')) {\n        const moduleIdPath = path.parse(moduleId);\n        const entryPath = path.parse(opts.entry);\n\n        // `moduleId` is a file in the sub-tree of `opts.entry` -> inline to bundle\n        if (moduleIdPath.dir.startsWith(entryPath.dir)) {\n          return false;\n        }\n      }\n\n      // XX: by default, the referenced module is inlined\n      return false;\n    },\n    input: opts.entry,\n    plugins: [\n      nodeResolve({ jsnext: true, module: true }),\n      commonJs(),\n    ],\n    onwarn: (warning) => {\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return;\n      }\n\n      log.warn(warning.message);\n    }\n  });\n\n  // Output the bundle to disk\n  await bundle.write({\n    // Keep the moduleId empty because we don't want to force developers to a specific moduleId.\n    moduleId: '',\n    name: `${opts.moduleName}`,\n    file: opts.dest,\n    format: opts.format,\n    banner: '',\n    globals: globals,\n    sourcemap: true\n  });\n}\n"]}